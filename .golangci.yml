run:
  timeout: 5m

issues:
  exclude-rules:
    # False positive: https://github.com/kunwardeep/paralleltest/issues/8.
    - linters:
        - paralleltest
      text: "does not use range value in test Run"

linters-settings:
  dupl:
    threshold: 100
  funlen:
    lines: 100
    statements: 50
  gci:
    local-prefixes: github.com/golangci/golangci-lint
  #  goconst:
  #    min-len: 2
  #    min-occurrences: 2
  gocyclo:
    min-complexity: 10
  golint:
    min-confidence: 0.8
  gomnd:
    settings:
      mnd:
        # don't include the "operation" and "assign"
        checks: argument,case,condition,return
  govet:
    check-shadowing: true
    settings:
      printf:
        funcs:
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
  misspell:
    locale: US
  nolintlint:
    allow-leading-space: true # don't require machine-readable nolint directives (i.e. with no leading space)
    allow-unused: false # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: true # require nolint directives to be specific about which linter is being skipped

linters:
  # please, do not use `enable-all`: it's deprecated and will be removed soon.
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  disable-all: true
  enable:
    - deadcode
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - structcheck
    - typecheck
    - unused
    - varcheck
    # Disabled by default linters
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    - contextcheck
    - cyclop
    - deadcode
    - depguard
    - dogsled
    - dupl
    - durationcheck
    - errcheck
    - errname
    - errorlint
    - execinquery
    - exhaustive
    # Initializing structs with all fields is nonsense.
    # - exhaustruct
    - exportloopref
    - forbidigo
    - forcetypeassert
    - funlen
    # gci would need to be customized for each project in order to be useful
    #- gci
    - gochecknoglobals
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    # TODOs are fine.
    #- godox
    - goerr113
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - gomnd
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - grouper
    - ifshort
    - ireturn
    # lll is flagged pretty much on tests only.
    #- lll
    - maintidx
    - makezero
    - misspell
    - nestif
    - nilerr
    - nilnil
    # NLReturn feels like a white label wsl, more annoying for what it's worth.
    #- nlreturn
    - noctx
    - nolintlint
    - nonamedreturns
    - nosprintfhostport
    - paralleltest
    - prealloc
    - predeclared
    - promlinter
    - revive
    - rowserrcheck
    - sqlclosecheck
    - stylecheck
    # Tags formats vary depending on the project so tagliatelle des not help in common configuration.
    #- tagliatelle
    - tenv
    # _test packages help to test the APIs but internal tests can also be useful, so we do not enforce the black-box approach for all tests.
    # - testpackage
    - thelper
    - tparallel
    - unconvert
    - unparam
    # Varnamelen is pretty annoying for tests and short methods. Short vars are bad but we trust developer's criteria.
    #- varnamelen
    - wastedassign
    - whitespace
    - wrapcheck
    # WSL is nice but extremely spammy. It should be enabled with care.
    #- wsl
