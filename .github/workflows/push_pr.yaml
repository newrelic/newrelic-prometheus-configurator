name: Push/PR pipeline
on:
  pull_request:
  push:
    branches:
      - main
      - check-tilt

env: 
  GO_VERSION: '1.18'
  MINIKUBE_VERSION: v1.26.0
  LATEST_K8S_VERSION: v1.24.0
  FIRST_K8S_VERSION: v1.16.0

jobs:
  chart-lint:
    name: Helm chart Lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        kubernetes-version:
          - ${{ env.FIRST_K8S_VERSION }}
          - ${{ env.LATEST_K8S_VERSION }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: helm/chart-testing-action@v2.2.1

      - name: Lint charts
        run: ct --config .github/ct.yaml lint --debug

      - name: Check for changed installable charts
        id: list-changed
        run: |
          changed=$(ct --config .github/ct.yaml list-changed)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi
      - name: Run helm unit tests
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          helm plugin install https://github.com/quintush/helm-unittest

          for chart in $(ct --config .github/ct.yaml list-changed); do
            if [ -d "$chart/tests/" ]; then
              helm unittest -3 $chart
            else
              echo "No unit tests found for $chart"
            fi
          done
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.6.0
        if: steps.list-changed.outputs.changed == 'true'
        with:
          minikube version: ${{ env.MINIKUBE_VERSION }}
          kubernetes version: ${{ matrix.kubernetes-version }}
          github token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-go@v2
        if: steps.list-changed.outputs.changed == 'true'
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Create image for chart testing
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          make build
          GOOS=linux GOARCH=amd64 DOCKER_BUILDKIT=1 docker build -t ct/prometheus-configurator:ct  .
          minikube image load ct/prometheus-configurator:ct
          kubectl create ns ct
      - name: Test install charts
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --namespace ct --config .github/ct.yaml --debug
      - name: Test upgrade charts
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --namespace ct --config .github/ct.yaml --debug --upgrade

  tilt:
    name: Check testing environment 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.6.0
        with:
          minikube version: ${{ env.MINIKUBE_VERSION }}
          kubernetes version: ${{ env.LATEST_K8S_VERSION }}
          github token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run Tilt ci
        run: make tilt-ci

  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run tests
        run: make test

  static-analysis:
    name: Static analysis and linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: newrelic/newrelic-infra-checkers@v1
        with:
          golangci-lint-config: golangci-lint
      - name: Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          auditOn: push
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        continue-on-error: ${{ github.event_name != 'pull_request' }}

  codespell:
    name: Codespell
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - name: Codespell test
        uses: codespell-project/actions-codespell@master
        with:
          skip: go.mod,go.sum
