name: Push images

# This is a reusable workflow that is called from any other workflow that needs 
# to build and push the configurator image to DockerHub

on:
  workflow_call:
    inputs:
      version:
        description: 'Binary version'
        type: string
        required: true
      image-tag:
        description: 'Image tag'
        type: string
        required: true
      push-latest:
        description: 'If enabled, an extra tag `latest` will be pushed apart from the defined tag'
        type: boolean
        required: false
        default: false

jobs:
  push-image:
    name: Build and Push images to Docker Hub
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE_NAME: newrelic/newrelic-prometheus-configurator
      DOCKER_PLATFORMS: "linux/amd64,linux/arm64,linux/arm" # Must be consistent with make build-multiarch
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Build integration
        env:
          TAG: ${{ inputs.version }}
        run: make build-multiarch
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.K8S_AGENTS_DOCKERHUB_USERNAME }}
          password: ${{ secrets.K8S_AGENTS_DOCKERHUB_TOKEN }}

      - name: Build and load x64 image for security scanning
        # We need to build a single-arch image again to be able to --load it into the host
        run: |
          docker buildx build --load --platform=linux/amd64 \
            -t $DOCKER_IMAGE_NAME:ci-scan \
            .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.18.0
        with:
          image-ref: '${{ env.DOCKER_IMAGE_NAME }}:ci-scan'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          severity: 'HIGH,CRITICAL'

      - name: Push image
        if: ${{ ! inputs.push-latest }}
        run: |
          docker buildx build --push --platform=$DOCKER_PLATFORMS \
            -t $DOCKER_IMAGE_NAME:${{ inputs.image-tag }} \
            .

      - name: Push image and overwrite 'latest'
        if: ${{ inputs.push-latest }}
        run: |
          docker buildx build --push --platform=$DOCKER_PLATFORMS \
            -t $DOCKER_IMAGE_NAME:${{ inputs.image-tag }} \
            -t $DOCKER_IMAGE_NAME:latest \
            .
