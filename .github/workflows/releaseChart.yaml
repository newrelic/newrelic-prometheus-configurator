name: Configurator Chart Release
# This workflow manually triggers the automated process of release based on the changelog.
# Is recommended to run `make release-changelog-chart` before to see an example of what is going to be generated.

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version including "v" prefix eg: v0.0.1 (Optional)'
        required: false
        type: string

concurrency: helm-charts

env:
  CHART_DIRECTORY: 'charts/newrelic-prometheus-agent'
  CHART_TAG_PREFIX: 'newrelic-prometheus-agent-'

jobs:
  # Sometimes chart-releaser might fetch an outdated index.yaml from gh-pages, causing a WAW hazard on the repo
  # This job checks the remote file is up to date with the local one on release
  validate-gh-pages-index:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: gh-pages
      - name: Download remote index file and check equality
        run: |
          curl -vsSL https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/index.yaml > index.yaml.remote
          LOCAL="$(md5sum < index.yaml)"
          REMOTE="$(md5sum < index.yaml.remote)"
          echo "$LOCAL" = "$REMOTE"
          test "$LOCAL" = "$REMOTE"

  chart-release:
    name: Create chart release
    runs-on: ubuntu-latest
    needs: [ validate-gh-pages-index ]
    outputs:
      version: ${{ steps.version.outputs.next-version }}
      image-tag: ${{ steps.image-tag.outputs.tag }}
    steps:
      - name: Check is triggered for main branch
        run: |
          if [ ${{ env.GITHUB_REF_NAME }} != "main" ] || [ ${{ env.GITHUB_REF_TYPE }} != "branch" ];then
            echo This workflow should only be triggered for the 'main' branch
            exit 1
          fi
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main
          token: "${{ secrets.COREINT_BOT_TOKEN }}"
      - name: Add newrelic repository
        run: helm repo add newrelic https://helm-charts.newrelic.com
      - uses: newrelic/release-toolkit/validate-markdown@v1
      - uses: newrelic/release-toolkit/generate-yaml@v1
        with:
          included-dirs: ${{ env.CHART_DIRECTORY }}
          markdown: ${{ env.CHART_DIRECTORY }}/CHANGELOG.md
          tag-prefix: ${{  env.CHART_TAG_PREFIX }}
      - uses: newrelic/release-toolkit/is-held@v1
      - uses: newrelic/release-toolkit/link-dependencies@v1
        with:
          dictionary: .github/rt-dictionary.yaml
      - uses: newrelic/release-toolkit/next-version@v1
        id: version
        env:
          # if specified the version will be not computed
          NEXT: "${{ inputs.version }}"
        with:
          tag-prefix: ${{  env.CHART_TAG_PREFIX }}
          output-prefix: ""
      - name: Configure Git
        run: |
          git config user.name newrelic-coreint-team
          git config user.email coreint-dev@newrelic.com
      - uses: newrelic/release-toolkit/update-markdown@v1
        with:
          version: ${{ steps.version.outputs.next-version }}
          markdown: ${{ env.CHART_DIRECTORY }}/CHANGELOG.md
      - name: Commit updated changelog
        run: |
          yq e -i '.version="${{ steps.version.outputs.next-version }}"' ${{ env.CHART_DIRECTORY }}/Chart.yaml
          git add ${{ env.CHART_DIRECTORY }}/CHANGELOG.md
          git add ${{ env.CHART_DIRECTORY }}/Chart.yaml
          git commit -m "Update changelog and Chart.yaml with ${{ steps.version.outputs.next-version }} changes"
          git push origin main
      - uses: newrelic/release-toolkit/render@v1
        with:
          markdown: ${{ env.CHART_DIRECTORY }}/release-notes.md
      - name: Release workload charts
        uses: helm/chart-releaser-action@v1
        with:
          config: .github/cr.yaml
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
