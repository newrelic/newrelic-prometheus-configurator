scrape_configs:
  - job_name: my-custom-target-authorization-full
    static_configs:
      - targets:
          - "192.168.3.1:2379"
        labels:
          label1: value1
          label2: value2
    proxy_url: http://proxy.url
    scrape_interval: 15s
    scrape_timeout: 15s
    metrics_path: /metrics-custom
    honor_labels: true
    honor_timestamps: true
    params:
      q: [ "puppies" ]
      oe: [ "utf8" ]
    scheme: "https"
    body_size_limit: 100MiB
    sample_limit: 2000
    target_limit: 2000
    label_limit: 2000
    label_name_length_limit: 2000
    label_value_length_limit: 2000
    tls_config:
      insecure_skip_verify: true
      ca_file: /path/to/ca.crt
      key_file: /path/to/key.crt
      cert_file: /path/to/cert.crt
      server_name: server.name
      min_version: TLS12
    authorization:
      type: Bearer
      # Sets the credentials. It is mutually exclusive with
      # `credentials_file`, we add both for testing purposes
      credentials: "fancy-credentials"
    relabel_configs:
      - source_labels: [ '__name__', 'instance' ]
        regex: node_memory_active_bytes;localhost:9100
        action: drop
    metric_relabel_configs:
      - source_labels: [ '__name__', 'instance' ]
        regex: node_memory_active_bytes;localhost:9100
        action: drop

  - job_name: my-custom-target-authorization-file
    static_configs:
      - targets:
        - "192.168.3.1:2379"
    authorization:
      type: Bearer
      # Sets the credentials to the credentials read from the configured file.
      # It is mutually exclusive with `credentials`, we add both for testing purposes
      credentials_file: 'path/to/file'

  - job_name: my-custom-target-basic-auth
    static_configs:
      - targets:
          - "192.168.3.1:2379"
    basic_auth:
      username: 'email@newrelic.com'
      password: 'cfgqvzjbhnwcomplicatedpasswordwjnqmd'

  - job_name: my-custom-target-basic-auth-password-file
    static_configs:
        - targets:
          - "192.168.3.1:2379"
    basic_auth:
      username: 'email@newrelic.com'
      password_file: 'root/to/file'

  - job_name: my-custom-target-oauth2
    static_configs:
        - targets:
          - "192.168.3.1:2379"
    oauth2:
      client_id: a-client-id
      client_secret: a-secret
      scopes:
        - a-scope
      token_url: a-token-url
      endpoint_params:
        param1: value1
        param2: value2
      tls_config:
        insecure_skip_verify: true
        ca_file: /path/to/ca.crt
        key_file: /path/to/key.crt
        cert_file: /path/to/cert.crt
        server_name: server.name
        min_version: TLS12
      proxy_url: a-proxy-url

  - job_name: my-custom-target-oauth2-secret-file
    static_configs:
      - targets:
          - "192.168.3.1:2379"
    oauth2:
      client_id: a-client-id
      # It is mutually exclusive with `client_secret`.
      client_secret_file: /path/to/file
      scopes:
        - a-scope
      token_url: a-token-url
      endpoint_params:
        param1: value1
        param2: value2
      tls_config:
        insecure_skip_verify: true
        ca_file: /path/to/ca.crt
        key_file: /path/to/key.crt
        cert_file: /path/to/cert.crt
        server_name: server.name
        min_version: TLS12
      proxy_url: a-proxy-url

  ## option to have the self scrape on configuration
  - job_name: self-metrics
    static_configs:
      - targets:
          - "localhost:9090"

  ## extra scrape config
  - job_name: extra-scrape-config
    static_configs:
      - targets:
          - "192.168.3.1:2379"
        labels:
          label1: value1
          label2: value2
    scrape_interval: 15s
    scrape_timeout: 15s
    metrics_path: /metrics-custom
    honor_labels: true
    honor_timestamps: true
    params:
      q: [ "puppies" ]
      oe: [ "utf8" ]
    scheme: "https"
    body_size_limit: 100MiB
    sample_limit: 2000
    target_limit: 2000
    label_limit: 2000
    label_name_length_limit: 2000
    label_value_length_limit: 2000
    tls_config:
      insecure_skip_verify: true
      ca_file: /path/to/ca.crt
      key_file: /path/to/key.crt
      cert_file: /path/to/cert.crt
      server_name: server.name
      min_version: TLS12
    authorization:
      type: Bearer
      # Sets the credentials. It is mutually exclusive with
      # `credentials_file`, we add both for testing purposes
      credentials: "fancy-credentials"
    relabel_configs:
      - source_labels: [ '__name__', 'instance' ]
        regex: node_memory_active_bytes;localhost:9100
        action: drop
    metric_relabel_configs:
      - source_labels: [ '__name__', 'instance' ]
        regex: node_memory_active_bytes;localhost:9100
        action: drop

remote_write:
  - name: newrelic_rw
    url: https://metric-api.newrelic.com/prometheus/v1/write
    authorization:
      credentials: nrLicenseKey
